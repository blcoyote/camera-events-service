services:
    camera-events-service:
        image: camera-events-service
        build:
            dockerfile: ./Dockerfile
            args:
                - image=camera-events-service
        volumes:
            - camera_events_logs:/app/logs/
        networks:
            - datastorage
            - web
        ports:
            - 8000:80
        #image: ghcr.io/blcoyote/camera-events-service:latest
        environment:
            - MAX_WORKERS=1
            - UVICORN_APP_VERSION=0.0.3
            - UVICORN_FRIGATE_BASEURL=$UVICORN_FRIGATE_BASEURL
            - UVICORN_DATABASE_URL=$UVICORN_DATABASE_URL
            - UVICORN_DOCS_URL=$UVICORN_DOCS_URL
            - UVICORN_FIREBASE_CREDENTIALS=$UVICORN_FIREBASE_CREDENTIALS
            - UVICORN_WEB_URL=$UVICORN_WEB_URL
            - UVICORN_REDIS_URL=camera-events-redis
            - UVICORN_REDIS_PASSWORD=$REDIS_PASSWORD
            - UVICORN_FIREBASE_APIKEY=$UVICORN_FIREBASE_APIKEY
            - UVICORN_AUTHDOMAIN=$UVICORN_AUTHDOMAIN
            - UVICORN_PROJECTID=$UVICORN_PROJECTID
            - UVICORN_STORAGEBUCKET=$UVICORN_STORAGEBUCKET
            - UVICORN_MESSAGESENDERID=$UVICORN_MESSAGESENDERID
            - UVICORN_APPID=$UVICORN_APPID
            - UVICORN_MEASUREMENTID=$UVICORN_MEASUREMENTID
            - UVICORN_MESSAGINGKEY=$UVICORN_MESSAGINGKEY
        labels:
            - traefik.http.routers.cameraevents.rule=Host(`$DNS_NAME`)
            - traefik.http.routers.cameraevents.tls=true
            - traefik.http.routers.cameraevents.tls.certresolver=lets-encrypt
            - traefik.http.services.cameraevents.loadbalancer.server.port=80

    camera-events-redis:
        image: redis:latest
        container_name: camera-events-redis
        restart: always
        ports:
            - 6379:6379
        networks:
            - datastorage
            - web
        volumes:
            - camera_events_redis:/root/redis
        environment:
            - REDIS_PASSWORD=$REDIS_PASSWORD
            - REDIS_PORT=6379
            - REDIS_DATABASES=1
        command:
            - /bin/sh
            - -c
            - redis-server --requirepass $${REDIS_PASSWORD:?REDIS_PASSWORD variable is not set}
networks:
    web:
        name: camera_events_web
    datastorage:
        name: camera_events_datastorage

volumes:
    camera_events_redis:
        name: camera_events_redis
        driver: local
    camera_events_fcmstore:
        name: camera_events_fcmstore
        driver: local
    camera_events_logs:
        name: camera_events_logs
        driver: local